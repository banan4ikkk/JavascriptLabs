import { toggleTask, editTask, deleteTask } from './tasks.js';

// –§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á
export function renderTaskList(tasks, filter = 'all') {
  const todoList = document.getElementById('todoList');
  // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
  todoList.innerHTML = '';
  
  // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–¥–∞—á–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ñ–∏–ª—å—Ç—Ä—É
  const filteredTasks = filterTasks(tasks, filter);
  
  // –ï—Å–ª–∏ –∑–∞–¥–∞—á –Ω–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (filteredTasks.length === 0) {
    todoList.innerHTML = '<li class="empty-message">No tasks found</li>';
    return;
  }
  
  // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏
  filteredTasks.forEach(task => {
    const li = document.createElement('li');
    li.className = 'task-item';
    li.dataset.id = task.id;
    
    // –®–∞–±–ª–æ–Ω HTML –¥–ª—è –∑–∞–¥–∞—á–∏
    li.innerHTML = `
      <input type="checkbox" class="task-checkbox" ${task.completed ? 'checked' : ''}>
      <span class="task-text ${task.completed ? 'completed' : ''}">${task.text}</span>
      <div class="task-actions">
        <button class="edit-btn">‚úèÔ∏è</button>
        <button class="delete-btn">üóëÔ∏è</button>
      </div>
    `;
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏
    li.querySelector('.task-checkbox').addEventListener('change', () => toggleTask(task.id));
    
    const taskText = li.querySelector('.task-text');
    const editBtn = li.querySelector('.edit-btn');
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
    editBtn.addEventListener('click', () => {
      const currentText = task.text;
      // –°–æ–∑–¥–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      const input = document.createElement('input');
      input.type = 'text';
      input.value = currentText;
      input.className = 'edit-input';
      
      // –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
      taskText.replaceWith(input);
      input.focus();
      
      // –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
      const saveEdit = () => {
        const newText = input.value.trim();
        // –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è –∏ –Ω–µ –ø—É—Å—Ç–æ–π - —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        if (newText && newText !== currentText) {
          editTask(task.id, newText);
        } else {
          // –ò–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
          renderTaskList(tasks, filter);
        }
      };
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
      input.addEventListener('blur', saveEdit);
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter
      input.addEventListener('keydown', (e) => {
        if (e.key === 'Enter') saveEdit();
      });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
    li.querySelector('.delete-btn').addEventListener('click', () => deleteTask(task.id));
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ —Å–ø–∏—Å–æ–∫
    todoList.appendChild(li);
  });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤ –∑–∞–¥–∞—á
export function updateTaskCounters(tasks) {
  const total = tasks.length;
  const completed = tasks.filter(t => t.completed).length;
  const active = total - completed;
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ DOM
  document.getElementById('totalCount').textContent = total;
  document.getElementById('activeCount').textContent = active;
  document.getElementById('completedCount').textContent = completed;
}

// –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞—á
function filterTasks(tasks, filter) {
  switch (filter) {
    case 'active':
      return tasks.filter(t => !t.completed);
    case 'completed':
      return tasks.filter(t => t.completed);
    default:
      return tasks;
  }
}